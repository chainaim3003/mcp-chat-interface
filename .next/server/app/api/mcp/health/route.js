"use strict";(()=>{var e={};e.id=366,e.ids=[366],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1017:e=>{e.exports=require("path")},1314:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>h,originalPathname:()=>S,requestAsyncStorage:()=>d,routeModule:()=>m,serverHooks:()=>f,staticGenerationAsyncStorage:()=>p,staticGenerationBailout:()=>g});var n={};r.r(n),r.d(n,{GET:()=>GET,POST:()=>POST});var o=r(884),a=r(6132),i=r(5798);let s=require("fs");var c=r.n(s),l=r(1017),u=r.n(l);async function GET(e){try{let e=u().join(process.cwd(),"claude_mcp_config.json");if(!c().existsSync(e))return i.Z.json({status:"error",error:"claude_mcp_config.json not found",configPath:e,servers:[],totalServers:0,totalTools:0},{status:404});let t=Object(function(){var e=Error("Cannot find module '@/lib/mcp-config'");throw e.code="MODULE_NOT_FOUND",e}())(),r=Object.keys(t.mcpServers),n=c().statSync(e),o=Object(function(){var e=Error("Cannot find module '@/lib/mcp-client'");throw e.code="MODULE_NOT_FOUND",e}())(),a=[],s=[];try{a=await o.initialize(),s=o.getServerStatus()}catch(e){console.error("MCP client initialization failed:",e)}finally{await o.disconnect()}let l=r.map(e=>{let r=t.mcpServers[e],n=s.find(t=>t.name===e),o=a.filter(t=>t._serverName===e);return{name:e,command:r.command,args:r.args,status:n?.connected?"connected":"failed",toolCount:o.length,tools:o.map(e=>({name:e.name,description:e.description})),lastError:n?.lastError}}),m=l.filter(e=>"connected"===e.status);return i.Z.json({status:m.length>0?"healthy":"unhealthy",configFile:"claude_mcp_config.json",configPath:e,configLastModified:n.mtime.toISOString(),totalServers:r.length,connectedServers:m.length,totalTools:a.length,servers:l,timestamp:new Date().toISOString()})}catch(e){return i.Z.json({status:"error",error:e instanceof Error?e.message:String(e),timestamp:new Date().toISOString()},{status:500})}}async function POST(e){try{let e=Object(function(){var e=Error("Cannot find module '@/lib/mcp-client'");throw e.code="MODULE_NOT_FOUND",e}())(),t=await e.initialize();return i.Z.json({status:"reinitialized",totalTools:t.length,serverStatus:e.getServerStatus(),timestamp:new Date().toISOString()})}catch(e){return i.Z.json({status:"error",error:e instanceof Error?e.message:String(e),timestamp:new Date().toISOString()},{status:500})}}(function(){var e=Error("Cannot find module '@/lib/mcp-config'");throw e.code="MODULE_NOT_FOUND",e})(),function(){var e=Error("Cannot find module '@/lib/mcp-client'");throw e.code="MODULE_NOT_FOUND",e}();let m=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/mcp/health/route",pathname:"/api/mcp/health",filename:"route",bundlePath:"app/api/mcp/health/route"},resolvedPagePath:"C:\\SATHYA\\CHAINAIM3003\\mcp-servers\\mcp-chat-interface\\app\\api\\mcp\\health\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:d,staticGenerationAsyncStorage:p,serverHooks:f,headerHooks:h,staticGenerationBailout:g}=m,S="/api/mcp/health/route"}};var t=require("../../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[997],()=>__webpack_exec__(1314));module.exports=r})();